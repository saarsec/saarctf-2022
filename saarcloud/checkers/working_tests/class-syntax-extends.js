// Copyright 2015 the V8 project authors. All rights reserved.
// Copyright (C) 2005, 2006, 2007, 2008, 2009 Apple Inc. All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1.  Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
// 2.  Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY APPLE INC. AND ITS CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL APPLE INC. OR ITS CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
// ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



var RESULT=[];function addExceptionExpr(expr){try{RESULT.push(JSON.stringify(eval(expr)))}catch(e){RESULT.push(e.toString())}}function addReportExprJson(expr){RESULT.push(JSON.stringify(eval(expr)))}function addReportExpr(expr){RESULT.push(JSON.parse(JSON.stringify(eval(expr))))}class Base{constructor(){}baseMethod(){return"base"}overridenMethod(){return"base"}static staticBaseMethod(){return"base"}static staticOverridenMethod(){return"base"}}class Derived extends Base{constructor(){super()}overridenMethod(){return"derived"}static staticOverridenMethod(){return"derived"}}addReportExpr("(new Base) instanceof Base");addReportExprJson("Object.getPrototypeOf(new Base)","Base.prototype");addReportExpr("(new Derived) instanceof Derived");addReportExprJson("Object.getPrototypeOf(new Derived)","Derived.prototype");addReportExprJson("Object.getPrototypeOf(Derived.prototype)","Base.prototype");addReportExprJson("(new Derived).baseMethod()",'"base"');addReportExprJson("(new Derived).overridenMethod()",'"derived"');addReportExprJson("Derived.staticBaseMethod()",'"base"');addReportExprJson("Derived.staticOverridenMethod()",'"derived"');addExceptionExpr("x = class extends",'"SyntaxError: Unexpected end of input"');addExceptionExpr("x = class extends",'"SyntaxError: Unexpected end of input"');addExceptionExpr("x = class extends Base {",'"SyntaxError: Unexpected end of input"');addExceptionExpr("x = class extends Base { }");addExceptionExpr("x = class extends Base { constructor() { } }");addReportExprJson("x.__proto__","Base");addReportExprJson("Object.getPrototypeOf(x)","Base");addReportExprJson("x.prototype.__proto__","Base.prototype");addReportExprJson("Object.getPrototypeOf(x.prototype)","Base.prototype");addReportExprJson("x = class extends null { constructor() { } }; x.__proto__","Function.prototype");addReportExprJson("x.__proto__","Function.prototype");addExceptionExpr("x = class extends 3 { constructor() { } }; x.__proto__",'"TypeError: Class extends value 3 is not a constructor or null"');addExceptionExpr('x = class extends "abc" { constructor() { } }; x.__proto__','"TypeError: Class extends value abc is not a constructor or null"');addExceptionExpr("baseWithBadPrototype = function () {}; baseWithBadPrototype.prototype = 3; new baseWithBadPrototype");addExceptionExpr("x = class extends baseWithBadPrototype { constructor() { } }",'"TypeError: Class extends value does not have valid prototype property 3"');addExceptionExpr('baseWithBadPrototype.prototype = "abc"');addExceptionExpr("x = class extends baseWithBadPrototype { constructor() { } }",'"TypeError: Class extends value does not have valid prototype property abc"');addExceptionExpr("baseWithBadPrototype.prototype = null; x = class extends baseWithBadPrototype { constructor() { } }");addExceptionExpr("x = 1; c = class extends ++x { constructor() { } };");addExceptionExpr("x = 1; c = class extends x++ { constructor() { } };");addExceptionExpr("x = 1; c = class extends (++x) { constructor() { } };");addExceptionExpr("x = 1; c = class extends (x++) { constructor() { } };");addReportExprJson("x = 1; try { c = class extends (++x) { constructor() { } } } catch (e) { }; x","2");addReportExprJson("x = 1; try { c = class extends (x++) { constructor() { } } } catch (e) { }; x","2");addExceptionExpr("namespace = {}; namespace.A = class { }; namespace.B = class extends namespace.A { }");addExceptionExpr("namespace = {}; namespace.A = class A { }; namespace.B = class B extends namespace.A { }");addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends namespace.A { constructor() { } }");addExceptionExpr("namespace = {}; namespace.A = class A { constructor() { } }; namespace.B = class B extends namespace.A { constructor() { } }");addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends (namespace.A) { constructor() { } }");addExceptionExpr('namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends namespace["A"] { constructor() { } }');addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; function getClassA() { return namespace.A }; namespace.B = class extends getClassA() { constructor() { } }");addExceptionExpr('namespace = {}; namespace.A = class { constructor() { } }; function getClass(prop) { return namespace[prop] }; namespace.B = class extends getClass("A") { constructor() { } }');addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends (false||null||namespace.A) { constructor() { } }");addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends false||null||namespace.A { constructor() { } }");addExceptionExpr("x = 1; namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends (x++, namespace.A) { constructor() { } };");addExceptionExpr("x = 1; namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends (namespace.A, x++) { constructor() { } };");addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends new namespace.A { constructor() { } }");addExceptionExpr("namespace = {}; namespace.A = class { constructor() { } }; namespace.B = class extends new namespace.A() { constructor() { } }");addReportExprJson("x = 1; namespace = {}; namespace.A = class { constructor() { } }; try { namespace.B = class extends (x++, namespace.A) { constructor() { } } } catch (e) { } x","2");addReportExprJson("x = 1; namespace = {}; namespace.A = class { constructor() { } }; try { namespace.B = class extends (namespace.A, x++) { constructor() { } } } catch (e) { } x","2");addReportExprJson("Object.getPrototypeOf((class { constructor () { } }).prototype)","Object.prototype");addReportExprJson("Object.getPrototypeOf((class extends null { constructor () { super(); } }).prototype)","null");addExceptionExpr("new (class extends undefined { constructor () { this } })",'"TypeError: Class extends value undefined is not a constructor or null"');addExceptionExpr("new (class extends undefined { constructor () { super(); } })",'"TypeError: Class extends value undefined is not a constructor or null"');addExceptionExpr("x = {}; new (class extends undefined { constructor () { return x; } })",'"TypeError: Class extends value undefined is not a constructor or null"');addExceptionExpr("y = 12; new (class extends undefined { constructor () { return y; } })",'"TypeError: Class extends value undefined is not a constructor or null"');addReportExpr("class x {}; new (class extends null { constructor () { return new x; } }) instanceof x");addExceptionExpr("new (class extends null { constructor () { this; } })","\"ReferenceError: Must call super constructor in derived class before accessing 'this' or returning from derived constructor\"");addExceptionExpr("new (class extends null { constructor () { super(); } })",'"TypeError: Super constructor null of anonymous class is not a constructor"');addReportExprJson("x = {}; new (class extends null { constructor () { return x } })","x");addExceptionExpr("y = 12; new (class extends null { constructor () { return y; } })",'"TypeError: Derived constructors may only return object or undefined"');addReportExpr("class x {}; new (class extends null { constructor () { return new x; } }) instanceof x");addReportExprJson("x = null; Object.getPrototypeOf((class extends x { }).prototype)","null");addReportExpr("Object.prototype.isPrototypeOf(class { })");addReportExpr("Function.prototype.isPrototypeOf(class { })");var successfullyParsed=true;return RESULT